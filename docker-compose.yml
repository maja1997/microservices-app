version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: user
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "54320:5432"
    networks:
      - postgres_net
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres_net
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring_net

  zookeeper:
    image: bitnami/zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    expose:
      - 2181
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - spring_net

  kafka:
    image: bitnami/kafka:latest
    restart: always
    ports:
      - 9092:9092
      - 9093:9093
    expose:
      - 9092
      - 9093
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CFG_LISTENERS=PLAINTEXT: //:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://kafka:9093
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    networks:
      - spring_net

  eureka-server:
    image: majami97/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring_net
    depends_on:
      - zipkin

  apigw:
    image: majami97/apigw:latest
    container_name: apigw
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring_net
    depends_on:
      - zipkin
      - eureka-server

  user:
    image: majami97/user:latest
    container_name: user
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring_net
      - postgres_net
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - kafka

  bot-detector:
    image: majami97/bot-detector:latest
    container_name: bot-detector
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring_net
      - postgres_net
    depends_on:
      - zipkin
      - eureka-server
      - postgres

  notification:
    image: majami97/notification:latest
    container_name: notification
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring_net
      - postgres_net
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - kafka

networks:
  postgres_net:
    driver: bridge
  spring_net:
    driver: bridge

volumes:
  postgres:
  pgadmin: